
package integradora.segundo.cuatrimestre.MenuInventario;

import integradora.segundo.cuatrimestre.Inventario;
import integradora.segundo.cuatrimestre.Main;
import integradora.segundo.cuatrimestre.Menu;
import java.util.ArrayList;
import static javax.swing.JOptionPane.*;

public class MenuInventario extends javax.swing.JFrame {
    
    // <editor-fold defaultstate="collapsed" desc="Utilidades personalizadas (metodos, propiedades, etcetera)">
    
    // <editor-fold defaultstate="collapsed" desc="Metodos Obtener">
    public String ObtenerSeccion(){
        return Seccion.getSelectedItem().toString();
    }
    // </editor-fold>
    
    public Inventario.Elemento ObtenerElementoSeleccionado(){
        // <editor-fold defaultstate="collapsed" desc="Obtener el elemento"> 
        String objeto = null;
        
        // 2025 Feb 12: Esto esta en un bloque try catch por que esto se llama al inicio de cuando se corre el codigo
        // Antes de que se le agreguen sus secciones, cosa que causa errores
        try { return Main.inv.Encontrar(Objetos.getSelectedItem().toString());
        } catch (Exception e) { return null; }
        // </editor-fold>
    }
    
    public void ActualizarTexto(){
        Inventario.Elemento objeto = ObtenerElementoSeleccionado();
        if (objeto == null) return;
        
        TextoPrincipal.selectAll();
        TextoPrincipal.replaceSelection(null);
        TextoPrincipal.insert(objeto.toString(), 0);
      
    }
    
    public void ActualizarListaDeElementos(){
        // <editor-fold defaultstate="collapsed" desc="Obtener la seccion"> 
        String opcion = null;
        
        // 2025 Feb 12: Esto esta en un bloque try catch por que esto se llama al inicio de cuando se corre el codigo
        // Antes de que se le agreguen sus secciones, cosa que causa errores
        try {
            opcion = Seccion.getSelectedItem().toString();
        } catch (Exception e) { return; }
        // </editor-fold>
        
        // <editor-fold defaultstate="collapsed" desc="Agregar los elementos"> 
        Objetos.removeAllItems();
        try { 
            ArrayList<String> elementos = new ArrayList<>();
            
            for (Inventario.Elemento elemento : Main.inv.Inventario.get(opcion))
                Objetos.addItem(elemento.Nombre);
        } catch (Exception e) {
            System.out.println("Hubo un error al intentar acceder: " + opcion);
            showMessageDialog(null, "Hubo un error al intentar acceder " + opcion, "Error", ERROR_MESSAGE);
            Objetos.addItem("error");
        }
        // </editor-fold>
        
        // <editor-fold defaultstate="collapsed" desc="Agregar los elementos"> 
        AgregarElemento.setText("Agregar un elemento a " + opcion);
        // </editor-fold>
    }
    //</editor-fold>
    
    /**
     * Creates new form InventarioProductos
     */
    public MenuInventario() {
        initComponents();
        
        for (String seccion: Main.inv.Secciones)
            Seccion.addItem(seccion);
        
        AgregarCuantas.setText(null);
        AgregarCuantas.setColumns(3);
        
        QuitarCuantas.setText(null);
        QuitarCuantas.setColumns(3);
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        NoSeComoBorrarEsto = new javax.swing.JPopupMenu();
        AgregarElemento = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        Seccion = new javax.swing.JComboBox<>();
        Objetos = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        BackToMenu = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TextoPrincipal = new javax.swing.JTextArea();
        BuscarInfo = new javax.swing.JButton();
        AgregarUnidades = new javax.swing.JButton();
        QuitarUnidades = new javax.swing.JButton();
        ReiniciarValor = new javax.swing.JButton();
        EliminarElemento = new javax.swing.JButton();
        AgregarCuantas = new javax.swing.JTextField();
        QuitarCuantas = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        AgregarElemento.setText("Agregar un producto");
        AgregarElemento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AgregarElementoActionPerformed(evt);
            }
        });

        jLabel1.setText("Seccion");

        Seccion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SeccionMouseClicked(evt);
            }
        });
        Seccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SeccionActionPerformed(evt);
            }
        });

        Objetos.setMaximumSize(new java.awt.Dimension(256, 256));
        Objetos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ObjetosActionPerformed(evt);
            }
        });

        jLabel2.setText("Objeto");

        BackToMenu.setText("Menu");
        BackToMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackToMenuActionPerformed(evt);
            }
        });

        TextoPrincipal.setEditable(false);
        TextoPrincipal.setColumns(20);
        TextoPrincipal.setRows(5);
        TextoPrincipal.setText("Presione el boton de \"Buscar info\"\nLas ventas por ahora seran aleatorizadas");
        jScrollPane1.setViewportView(TextoPrincipal);

        BuscarInfo.setText("Buscar Info");
        BuscarInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuscarInfoActionPerformed(evt);
            }
        });

        AgregarUnidades.setText("Agregar Unidades");
        AgregarUnidades.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AgregarUnidadesActionPerformed(evt);
            }
        });

        QuitarUnidades.setText("Quitar Unidades");
        QuitarUnidades.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QuitarUnidadesActionPerformed(evt);
            }
        });

        ReiniciarValor.setText("Reiniciar Valores");
        ReiniciarValor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReiniciarValorActionPerformed(evt);
            }
        });

        EliminarElemento.setText("Eliminar Elemento");
        EliminarElemento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EliminarElementoActionPerformed(evt);
            }
        });

        AgregarCuantas.setText("          ");
        AgregarCuantas.setToolTipText("Introduce cuantas unidades quieres agregar");

        QuitarCuantas.setText("            ");
        QuitarCuantas.setToolTipText("Introduce cuantas unidades quieres quitar");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Objetos, 0, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Seccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(BackToMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(AgregarCuantas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(QuitarCuantas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(BuscarInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(AgregarUnidades, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(QuitarUnidades, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ReiniciarValor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(EliminarElemento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(AgregarElemento)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(Seccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BackToMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Objetos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(BuscarInfo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(AgregarUnidades, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(AgregarCuantas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(QuitarUnidades)
                            .addComponent(QuitarCuantas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ReiniciarValor)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(EliminarElemento))
                    .addComponent(jScrollPane1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(AgregarElemento)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Objetos.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SeccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SeccionActionPerformed
        ActualizarListaDeElementos();
    }//GEN-LAST:event_SeccionActionPerformed

    private void BackToMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackToMenuActionPerformed
        Menu menu = new Menu();
        menu.setVisible(true);
        
        setVisible(false);
        dispose();
    }//GEN-LAST:event_BackToMenuActionPerformed

    private void SeccionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SeccionMouseClicked
        // 2025 Feb 10: No puedo borrar esto . . .
    }//GEN-LAST:event_SeccionMouseClicked

    private void ObjetosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ObjetosActionPerformed
        // 2025 Feb 13: No se como borrar esto
    }//GEN-LAST:event_ObjetosActionPerformed

    private void BuscarInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuscarInfoActionPerformed
        ActualizarTexto();
    }//GEN-LAST:event_BuscarInfoActionPerformed

    private void AgregarUnidadesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AgregarUnidadesActionPerformed
        Inventario.Elemento objeto = ObtenerElementoSeleccionado();
        if (objeto == null) return;
        
        int unidades = 0;
        try {unidades = Integer.parseInt(AgregarCuantas.getText().toString());} 
        catch (Exception e) {
            System.out.println("Hubo un error al intentar acceder cuantas unidades agregar");
            showMessageDialog(null, "Hubo un error al intentar acceder cuantas unidades agregar", "Error", ERROR_MESSAGE);
        }
        
        // 2025 Feb 13: Mmm, probablemente este try catch no es necesario por que ya se checa si no es null
        try { objeto.Unidades+=unidades;} 
        catch (Exception e){
            System.out.println("Hubo un error al intentar agregar unidades para : " + objeto.Nombre);
            showMessageDialog(null, "Hubo un error al intentar acceder " + objeto.Nombre, "Error", ERROR_MESSAGE);
        }
        
        AgregarCuantas.setText(null);
        ActualizarTexto();
    }//GEN-LAST:event_AgregarUnidadesActionPerformed
    private void QuitarUnidadesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QuitarUnidadesActionPerformed
        Inventario.Elemento objeto = ObtenerElementoSeleccionado();
        if (objeto == null) return;
        
        int unidades = 0;
        try {unidades = Integer.parseInt(QuitarCuantas.getText().toString());} 
        catch (Exception e) {
            System.out.println("Hubo un error al intentar acceder cuantas unidades quitar");
            showMessageDialog(null, "Hubo un error al intentar acceder cuantas unidades quitar", "Error", ERROR_MESSAGE);
        }
        
        // 2025 Feb 13: Mmm, probablemente este try catch no es necesario por que ya se checa si no es null
        try { objeto.Unidades-=unidades;} 
        catch (Exception e){
            System.out.println("Hubo un error al intentar quitar unidades para : " + objeto.Nombre);
            showMessageDialog(null, "Hubo un error al intentar acceder " + objeto.Nombre, "Error", ERROR_MESSAGE);
        }
        
        AgregarCuantas.setText(null);
        ActualizarTexto();
    }//GEN-LAST:event_QuitarUnidadesActionPerformed

    private void EliminarElementoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EliminarElementoActionPerformed
        Inventario.Elemento objeto = ObtenerElementoSeleccionado();
        if (objeto == null) return;
        
        // <editor-fold defaultstate="collapsed" desc="Obtener la seccion"> 
        String seccion = null;
        
        // 2025 Feb 12: Esto esta en un bloque try catch por que esto se llama al inicio de cuando se corre el codigo
        // Antes de que se le agreguen sus secciones, cosa que causa errores
        try {
            seccion = Seccion.getSelectedItem().toString();
        } catch (Exception e) { return; }
        // </editor-fold>
        
        Main.inv.EliminarElemento(seccion, objeto.Nombre);
        ActualizarListaDeElementos();
        ActualizarTexto();
    }//GEN-LAST:event_EliminarElementoActionPerformed

    private void ReiniciarValorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReiniciarValorActionPerformed
        Inventario.Elemento objeto = ObtenerElementoSeleccionado();
        if (objeto == null) return;
        
        objeto.ReiniciarValores();
        ActualizarTexto();
    }//GEN-LAST:event_ReiniciarValorActionPerformed

    private void AgregarElementoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AgregarElementoActionPerformed
        AgregarProducto agregar = new AgregarProducto();
        
        // <editor-fold defaultstate="collapsed" desc="Obtener la seccion"> 
        String seccion = null;
        
        // 2025 Feb 12: Esto esta en un bloque try catch por que esto se llama al inicio de cuando se corre el codigo
        // Antes de que se le agreguen sus secciones, cosa que causa errores
        try {
            seccion = Seccion.getSelectedItem().toString();
        } catch (Exception e) { return; }
        // </editor-fold>
        
        agregar.DeclararSeccionActual(seccion);
        agregar.setVisible(true);
    }//GEN-LAST:event_AgregarElementoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenuInventario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenuInventario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenuInventario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuInventario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MenuInventario().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField AgregarCuantas;
    private javax.swing.JButton AgregarElemento;
    private javax.swing.JButton AgregarUnidades;
    private javax.swing.JButton BackToMenu;
    private javax.swing.JButton BuscarInfo;
    private javax.swing.JButton EliminarElemento;
    private javax.swing.JPopupMenu NoSeComoBorrarEsto;
    private javax.swing.JComboBox<String> Objetos;
    private javax.swing.JTextField QuitarCuantas;
    private javax.swing.JButton QuitarUnidades;
    private javax.swing.JButton ReiniciarValor;
    private javax.swing.JComboBox<String> Seccion;
    private javax.swing.JTextArea TextoPrincipal;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

}
