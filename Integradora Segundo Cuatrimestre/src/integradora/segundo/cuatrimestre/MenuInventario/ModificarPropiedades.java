/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package integradora.segundo.cuatrimestre.MenuInventario;

import integradora.segundo.cuatrimestre.Inventario;
import integradora.segundo.cuatrimestre.Main;
import java.util.*;
import java.util.Enumeration;

/**
 *
 * @author DELL
 */
public class ModificarPropiedades extends javax.swing.JFrame {

    // <editor-fold defaultstate="collapsed" desc="Metodos, Propiedades, etc">   
    public ArrayList<String> Propiedades = new ArrayList<String>();
    public Inventario.Elemento Elemento;
    public MenuInventario main;
    
    public void IngresarPropiedadesAlComboBox(){
        // <editor-fold defaultstate="collapsed" desc="Obtener los nombres de las propiedades">
        Enumeration<String> llaves = Elemento.Propiedades.keys();
        System.out.println(Elemento.Nombre + " ha sido seleccionado para modificar propiedades");
        ArrayList<String> lista = new ArrayList<>();
        for (int i = 0; i < Elemento.Propiedades.size(); i++) lista.add(llaves.nextElement());
        
        var listaBien = lista.reversed();
        // </editor-fold>
        
        // Agregar las propiedades a el combo box de propiedades
        for (int i = 0; i < listaBien.size(); i ++){
            Propiedad.addItem(listaBien.get(i));
        }
    }
    
    /**
     * Una vez que se vaya a hacer visible, llamar esto
     */
    public void Inicializar(){
        IngresarPropiedadesAlComboBox();
    }
    // </editor-fold>
    
    /**
     * Creates new form ModificarPropiedades
     */
    public ModificarPropiedades() {
        initComponents();
        
        Valor.setColumns(8);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Cancelar = new javax.swing.JButton();
        PropiedadesLabel = new javax.swing.JLabel();
        Propiedad = new javax.swing.JComboBox<>();
        Valor = new javax.swing.JTextField();
        ValorLabel = new javax.swing.JLabel();
        Confirmar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        Cancelar.setText("Cerrar");
        Cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelarActionPerformed(evt);
            }
        });

        PropiedadesLabel.setText("Propiedades");

        Propiedad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PropiedadActionPerformed(evt);
            }
        });

        ValorLabel.setText("Valor");

        Confirmar.setText("Confirmar");
        Confirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConfirmarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Confirmar))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Propiedad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Valor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(PropiedadesLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ValorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(51, 51, 51))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Cancelar)
                    .addComponent(PropiedadesLabel)
                    .addComponent(ValorLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Propiedad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Valor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Confirmar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelarActionPerformed
        setVisible(false);
        dispose();
        main.ActualizarTexto();
    }//GEN-LAST:event_CancelarActionPerformed

    private void PropiedadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PropiedadActionPerformed
        Valor.setText("" + Elemento.Propiedades.get(Propiedad.getSelectedItem()));
    }//GEN-LAST:event_PropiedadActionPerformed

    private void ConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConfirmarActionPerformed
        // 2025 Feb 27: Para dinamicamente obtener el valor, ya que si uso el metodo "getText" siempre me devolvera un string
        var valor = new Object();
        try {
            // 2025 Feb 27: Intentar convertir a int
            valor = Integer.valueOf(Valor.getText());
            
        } catch (Exception e){
            // 2025 Feb 27: Sino, ver si se puede convertir a double
            try{
                valor = Double.valueOf(Valor.getText());
            } 
            // 2025 Feb 27: Finalmente, convertir a texto normalmente
            catch (Exception e2){
                valor = Valor.getText();
            }
        }
        
        // 2025 Feb 27: Por que java no devuelve la referencia sino que solo el valor, tengo que hacer esto
        Elemento.Propiedades.put((String)Propiedad.getSelectedItem(), valor);
        main.ActualizarTexto();
    }//GEN-LAST:event_ConfirmarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ModificarPropiedades.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ModificarPropiedades.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ModificarPropiedades.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ModificarPropiedades.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ModificarPropiedades().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Cancelar;
    private javax.swing.JButton Confirmar;
    private javax.swing.JComboBox<String> Propiedad;
    private javax.swing.JLabel PropiedadesLabel;
    private javax.swing.JTextField Valor;
    private javax.swing.JLabel ValorLabel;
    // End of variables declaration//GEN-END:variables
}
